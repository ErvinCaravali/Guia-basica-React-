{"ast":null,"code":"import { TextureLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { useLayoutEffect, useEffect, useMemo } from 'react';\nconst IsObject = url => url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\nfunction useTexture(input, onLoad) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\n  useLayoutEffect(() => {\n    onLoad == null || onLoad(textures);\n  }, [onLoad]);\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  // NOTE: only available for WebGLRenderer\n  useEffect(() => {\n    if ('initTexture' in gl) {\n      const array = Array.isArray(textures) ? textures : [textures];\n      array.forEach(gl.initTexture);\n    }\n  }, [gl, textures]);\n  const mappedTextures = useMemo(() => {\n    if (IsObject(input)) {\n      const keyed = {};\n      let i = 0;\n      for (const key in input) keyed[key] = textures[i++];\n      return keyed;\n    } else {\n      return textures;\n    }\n  }, [input, textures]);\n  return mappedTextures;\n}\nuseTexture.preload = url => useLoader.preload(TextureLoader, url);\nuseTexture.clear = input => useLoader.clear(TextureLoader, input);\nexport { IsObject, useTexture };","map":{"version":3,"names":["TextureLoader","useThree","useLoader","useLayoutEffect","useEffect","useMemo","IsObject","url","Object","Array","isArray","useTexture","input","onLoad","gl","state","textures","values","array","forEach","initTexture","mappedTextures","keyed","i","key","preload","clear"],"sources":["/home/ervin/Escritorio/Guia-basica-React-/node_modules/@react-three/drei/core/useTexture.js"],"sourcesContent":["import { TextureLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { useLayoutEffect, useEffect, useMemo } from 'react';\n\nconst IsObject = url => url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\nfunction useTexture(input, onLoad) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\n  useLayoutEffect(() => {\n    onLoad == null || onLoad(textures);\n  }, [onLoad]);\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  // NOTE: only available for WebGLRenderer\n  useEffect(() => {\n    if ('initTexture' in gl) {\n      const array = Array.isArray(textures) ? textures : [textures];\n      array.forEach(gl.initTexture);\n    }\n  }, [gl, textures]);\n  const mappedTextures = useMemo(() => {\n    if (IsObject(input)) {\n      const keyed = {};\n      let i = 0;\n      for (const key in input) keyed[key] = textures[i++];\n      return keyed;\n    } else {\n      return textures;\n    }\n  }, [input, textures]);\n  return mappedTextures;\n}\nuseTexture.preload = url => useLoader.preload(TextureLoader, url);\nuseTexture.clear = input => useLoader.clear(TextureLoader, input);\n\nexport { IsObject, useTexture };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AACxD,SAASC,eAAe,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAE3D,MAAMC,QAAQ,GAAGC,GAAG,IAAIA,GAAG,KAAKC,MAAM,CAACD,GAAG,CAAC,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,IAAI,OAAOA,GAAG,KAAK,UAAU;AAC/F,SAASI,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACjC,MAAMC,EAAE,GAAGb,QAAQ,CAACc,KAAK,IAAIA,KAAK,CAACD,EAAE,CAAC;EACtC,MAAME,QAAQ,GAAGd,SAAS,CAACF,aAAa,EAAEM,QAAQ,CAACM,KAAK,CAAC,GAAGJ,MAAM,CAACS,MAAM,CAACL,KAAK,CAAC,GAAGA,KAAK,CAAC;EACzFT,eAAe,CAAC,MAAM;IACpBU,MAAM,IAAI,IAAI,IAAIA,MAAM,CAACG,QAAQ,CAAC;EACpC,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;;EAEZ;EACA;EACA;EACAT,SAAS,CAAC,MAAM;IACd,IAAI,aAAa,IAAIU,EAAE,EAAE;MACvB,MAAMI,KAAK,GAAGT,KAAK,CAACC,OAAO,CAACM,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAACA,QAAQ,CAAC;MAC7DE,KAAK,CAACC,OAAO,CAACL,EAAE,CAACM,WAAW,CAAC;IAC/B;EACF,CAAC,EAAE,CAACN,EAAE,EAAEE,QAAQ,CAAC,CAAC;EAClB,MAAMK,cAAc,GAAGhB,OAAO,CAAC,MAAM;IACnC,IAAIC,QAAQ,CAACM,KAAK,CAAC,EAAE;MACnB,MAAMU,KAAK,GAAG,CAAC,CAAC;MAChB,IAAIC,CAAC,GAAG,CAAC;MACT,KAAK,MAAMC,GAAG,IAAIZ,KAAK,EAAEU,KAAK,CAACE,GAAG,CAAC,GAAGR,QAAQ,CAACO,CAAC,EAAE,CAAC;MACnD,OAAOD,KAAK;IACd,CAAC,MAAM;MACL,OAAON,QAAQ;IACjB;EACF,CAAC,EAAE,CAACJ,KAAK,EAAEI,QAAQ,CAAC,CAAC;EACrB,OAAOK,cAAc;AACvB;AACAV,UAAU,CAACc,OAAO,GAAGlB,GAAG,IAAIL,SAAS,CAACuB,OAAO,CAACzB,aAAa,EAAEO,GAAG,CAAC;AACjEI,UAAU,CAACe,KAAK,GAAGd,KAAK,IAAIV,SAAS,CAACwB,KAAK,CAAC1B,aAAa,EAAEY,KAAK,CAAC;AAEjE,SAASN,QAAQ,EAAEK,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}